{"ast":null,"code":"import React from \"react\";\nimport { LiWrapper } from \"./webcomps\";\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components';\nimport SectionTitle from \"./sectionTitle\";\nvar StyleText = styled.span.withConfig({\n  displayName: \"taskList__StyleText\",\n  componentId: \"ksnv82-0\"\n})([\"color:\", \";\"], function (props) {\n  return props.hexCode;\n});\n\nvar TaskList = function TaskList(_ref) {\n  var listHeader = _ref.listHeader,\n      taskList = _ref.taskList;\n  itemList = taskList.title.splice(taskList.hightLight);\n\n  if (itemList.length === 1) {\n    itemList.push('');\n  }\n\n  return React.createElement(\"div\", null, React.createElement(SectionTitle, {\n    title: listHeader\n  }), React.createElement(\"ul\", null, React.createElement(LiWrapper, null, React.createElement(\"span\", null, itemList[0], \"}\")), React.createElement(LiWrapper, null, React.createElement(StyleText, null, itemList[1])), React.createElement(LiWrapper, null, React.createElement(\"span\", null, itemList[2]))));\n};\n\nTaskList.propTypes = {\n  listHeader: PropTypes.string.isRequired,\n  taskList: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default TaskList;","map":{"version":3,"sources":["/root/webprojects/portfolio/components/taskList.js"],"names":["React","LiWrapper","PropTypes","styled","SectionTitle","StyleText","span","props","hexCode","TaskList","listHeader","taskList","itemList","title","splice","hightLight","length","push","propTypes","string","isRequired","arrayOf","object"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,IAAMC,SAAS,GAAGF,MAAM,CAACG,IAAV;AAAA;AAAA;AAAA,oBACF,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,OAAV;AAAA,CADH,CAAf;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8B;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC7CC,EAAAA,QAAQ,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBH,QAAQ,CAACI,UAA/B,CAAX;;AACA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzBJ,IAAAA,QAAQ,CAACK,IAAT,CAAc,EAAd;AACD;;AACD,SACE,iCACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEP;AAArB,IADJ,EAEI,gCACE,oBAAC,SAAD,QACI,kCAAOE,QAAQ,CAAC,CAAD,CAAf,MADJ,CADF,EAIE,oBAAC,SAAD,QACI,oBAAC,SAAD,QAAYA,QAAQ,CAAC,CAAD,CAApB,CADJ,CAJF,EAOE,oBAAC,SAAD,QACI,kCAAOA,QAAQ,CAAC,CAAD,CAAf,CADJ,CAPF,CAFJ,CADF;AAgBD,CArBD;;AAuBAH,QAAQ,CAACS,SAAT,GAAqB;AACjBR,EAAAA,UAAU,EAAER,SAAS,CAACiB,MAAV,CAAiBC,UADZ;AAEjBT,EAAAA,QAAQ,EAAET,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,MAA5B,EAAoCF;AAF7B,CAArB;AAKA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport {LiWrapper} from \"./webcomps\";\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components';\n\nimport SectionTitle from \"./sectionTitle\";\nconst StyleText = styled.span`\n    color: ${props => props.hexCode};\n`;\nconst TaskList = ({ listHeader, taskList }) => {\n  itemList = taskList.title.splice(taskList.hightLight);\n  if (itemList.length === 1) {\n    itemList.push('');\n  }\n  return(\n    <div>\n        <SectionTitle title={listHeader}/>\n        <ul>\n          <LiWrapper>\n              <span>{itemList[0]}}</span>\n          </LiWrapper>\n          <LiWrapper>\n              <StyleText>{itemList[1]}</StyleText>\n          </LiWrapper>\n          <LiWrapper>\n              <span>{itemList[2]}</span>\n          </LiWrapper>\n        </ul>\n    </div>\n  );\n};\n\nTaskList.propTypes = {\n    listHeader: PropTypes.string.isRequired,\n    taskList: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}