{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from \"react\";\nimport { LiWrapper, Span } from \"./webcomps\";\nimport { SectionContainer } from \"./wrappers\";\nimport PropTypes from \"prop-types\";\nimport styled from 'styled-components';\nimport SectionTitle from \"./sectionTitle\";\nvar StyleLink = styled.a.withConfig({\n  displayName: \"taskList__StyleLink\",\n  componentId: \"ksnv82-0\"\n})([\"text-decoration:none;\"]);\nvar UlWrapper = styled.ul.withConfig({\n  displayName: \"taskList__UlWrapper\",\n  componentId: \"ksnv82-1\"\n})([\"@media (max-width:767px){padding-left:0px;}\"]);\n\nvar TaskList = function TaskList(props) {\n  var listHeader = props.listHeader,\n      taskList = props.taskList;\n  var updatedTaskList = taskList.map(function (task) {\n    return _objectSpread({}, task, {\n      title: task.title.split(task.hightLight)\n    });\n  });\n  return React.createElement(SectionContainer, null, React.createElement(SectionTitle, {\n    title: listHeader\n  }), React.createElement(UlWrapper, null, updatedTaskList.map(function (item) {\n    return React.createElement(LiWrapper, {\n      key: item.title\n    }, React.createElement(Span, null, item.title[0]), React.createElement(StyleLink, {\n      href: item.link\n    }, React.createElement(Span, {\n      color: item.hexCode\n    }, item.hightLight)), React.createElement(Span, null, item.title[1]));\n  })));\n};\n\nexport default TaskList;","map":null,"metadata":{},"sourceType":"module"}